/****** Object:  UserDefinedFunction [dbo].[fnc_GetJobSummaryTemplateDataWithLookup]    Script Date: 6/11/2014 8:26:51 PM ******/
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fnc_GetJobSummaryTemplateDataWithLookup]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
DROP FUNCTION [dbo].[fnc_GetJobSummaryTemplateDataWithLookup]
GO

/****** Object:  UserDefinedFunction [dbo].[fnc_GetJobSummaryTemplateDataWithLookup]    Script Date: 6/11/2014 8:26:51 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[fnc_GetJobSummaryTemplateDataWithLookup]') AND type in (N'FN', N'IF', N'TF', N'FS', N'FT'))
BEGIN
execute dbo.sp_executesql @statement = N'/*******************************************************************  
* FUNCTION: fnc_GetJobSummaryTemplateDataWithLookup
* Purpose : This function would return job summary template data 
* Invoked from : prc_CWI_SetJobGenerateInsertion
* CREATED: Vijesh Mahi
* CREATED ON : 7-Jan-2014
* MODIFICATION HISTORY  
* DATE      AUTHOR          DESCRIPTION  
 2/4/14		Mohankumar		Mapping field is used instead of name          

**********************************************************************  
Execution example :
**********************************************************************  
select * from dbo.fnc_GetJobSummaryTemplateDataWithLookup(1744)
**********************************************************************/ 
CREATE FUNCTION [dbo].[fnc_GetJobSummaryTemplateDataWithLookup] (
     @inJobId INT
   )
RETURNS @tblJobSummary TABLE 
(MappingFieldId int , FieldValue varchar(1000), LookupId int, LookupValue varchar(100) )

AS
BEGIN
	
    INSERT INTO @tblJobSummary
	(MappingFieldId, FieldValue, LookupId)
	SELECT 
		L.Id, TD.FieldValue ,
		CASE WHEN typelookupId = 9104 /*Dropdownlist*/ AND TF.lookuptypeid IS NOT NULL AND ISNUMERIC(TD.FieldValue)=1 THEN 
			CAST(TD.FieldValue  AS INT) ELSE NULL END
	FROM CWI_JOBSUMMARYTemplateData TD
	INNER JOIN CWI_TaskTemplateField TTF
		ON TTF.Id = TD.TemplateFieldId
	INNER JOIN CWI_TaskField TF
		ON TTF.TaskFieldId = TF.Id
	INNER JOIN Lookup L
		ON L.Id = TF.MappingLookupId
	WHERE JOBID = @inJobId	

	UPDATE @tblJobSummary SET LookupValue = L.lookupName
	from @tblJobSummary t
	LEFT OUTER JOIN Lookup L
		ON t.LookupId = L.Id
	
    RETURN
END



' 
END

GO


